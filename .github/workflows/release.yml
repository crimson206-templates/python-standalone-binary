name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            artifact_name: example-cli-linux-amd64
            build_method: docker
          - os: ubuntu-22.04
            artifact_name: example-cli-linux-arm64
            build_method: docker
            build_args: --platform linux/arm64
          - os: macos-latest
            artifact_name: example-cli-darwin-amd64
            build_method: native
          - os: windows-latest
            artifact_name: example-cli-windows-amd64.exe
            build_method: native

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python (for native builds)
      if: matrix.build_method == 'native'
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install PyInstaller (for native builds)
      if: matrix.build_method == 'native'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Binary (native)
      if: matrix.build_method == 'native'
      run: |
        pyinstaller --onefile src/example_cli/cli.py --name ${{ matrix.artifact_name }}

    - name: Build Binary (Docker - for maximum Linux compatibility)
      if: matrix.build_method == 'docker'
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace \
          ubuntu:20.04 bash -c "
          apt-get update && 
          apt-get install -y python3 python3-pip && 
          cd /workspace && 
          pip3 install -r requirements.txt && 
          pyinstaller --onefile src/example_cli/cli.py --name ${{ matrix.artifact_name }}
          "

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/${{ matrix.artifact_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}